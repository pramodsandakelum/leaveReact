{"ast":null,"code":"export const leaveFunctions = {\n  //enable medical report if more than 2 days\n  medicalreport() {\n    var date = parseInt(document.getElementById(\"leaveCount\").value);\n    var report = document.getElementById(\"medicalFile\");\n    var leaveType = document.getElementById(\"leaveTypeDD\");\n    var type = leaveType.options[leaveType.selectedIndex].text;\n    if (type == \"Medical\" && date > 1) {\n      report.disabled = false;\n    } else {\n      report.disabled = true;\n    }\n  },\n  //lieu leave function\n  lieuLeave() {\n    var leaveType = document.getElementById(\"leaveTypeDD\");\n    var fromdate = document.getElementById(\"fromDate\");\n    var lieuPanel = document.getElementById(\"lieuPanel\");\n    var todate = document.getElementById(\"toDate\");\n    var fromlabel = document.getElementById(\"fromLabel\");\n    var tolabel = document.getElementById(\"toLabel\");\n    var type = leaveType.options[leaveType.selectedIndex].text;\n    if (type == \"Lieu\") {\n      fromdate.style.display = \"none\";\n      todate.style.display = \"none\";\n      fromlabel.style.display = \"none\";\n      tolabel.style.display = \"none\";\n      lieuPanel.style.display = \"\";\n    } else {\n      fromdate.style.display = \"\";\n      todate.style.display = \"\";\n      fromlabel.style.display = \"\";\n      tolabel.style.display = \"\";\n      lieuPanel.style.display = \"none\";\n      this.clearPrior();\n      this.clearLeave();\n    }\n  },\n  // add prior work dates to list\n  priorDates() {\n    const datePicker = document.getElementById(\"priorDate\");\n    const selectedDate = datePicker.value;\n\n    // Add the selected date to the select option list\n    const datesList = document.getElementById(\"priorDateList\");\n    const option = document.createElement(\"option\");\n    option.text = selectedDate;\n    datesList.add(option);\n    datesList.style.display = \"\";\n  },\n  //clear prior list and datepicker\n  clearPrior() {\n    const datesList = document.getElementById(\"priorDateList\");\n    const datePicker = document.getElementById(\"priorDate\");\n    while (datesList.firstChild) {\n      datesList.removeChild(datesList.firstChild);\n    }\n    datesList.style.display = \"none\";\n    datePicker.value = \"\";\n  },\n  // add prior work dates to list\n  leaveDates() {\n    const datePicker = document.getElementById(\"leaveDate\");\n    const selectedDate = datePicker.value;\n\n    // Add the selected date to the select option list\n    const datesList = document.getElementById(\"leaveDateList\");\n    const option = document.createElement(\"option\");\n    option.text = selectedDate;\n    datesList.add(option);\n    datesList.style.display = \"\";\n  },\n  clearLeave() {\n    const datesList = document.getElementById(\"leaveDateList\");\n    const datePicker = document.getElementById(\"leaveDate\");\n    while (datesList.firstChild) {\n      datesList.removeChild(datesList.firstChild);\n    }\n    datesList.style.display = \"none\";\n    datePicker.value = \"\";\n  },\n  //calculate days for leave\n  calculateBusinessDays() {\n    const currentDate = document.getElementById(\"fromDate\");\n    const endDate = document.getElementById(\"toDate\");\n    const blockedDates = this.blockedDates;\n    let businessDays = 0;\n    while (currentDate <= endDate) {\n      const dayOfWeek = currentDate.getDay(); // 0 (Sunday) to 6 (Saturday)\n      const formattedDate = currentDate.toISOString().split(\"T\")[0];\n\n      // Exclude weekends (Saturday and Sunday) and blocked dates\n      if (dayOfWeek !== 0 && dayOfWeek !== 6 && !blockedDates.includes(formattedDate)) {\n        businessDays++;\n      }\n      currentDate.setDate(currentDate.getDate() + 1); // Move to the next day\n    }\n  }\n};","map":{"version":3,"names":["leaveFunctions","medicalreport","date","parseInt","document","getElementById","value","report","leaveType","type","options","selectedIndex","text","disabled","lieuLeave","fromdate","lieuPanel","todate","fromlabel","tolabel","style","display","clearPrior","clearLeave","priorDates","datePicker","selectedDate","datesList","option","createElement","add","firstChild","removeChild","leaveDates","calculateBusinessDays","currentDate","endDate","blockedDates","businessDays","dayOfWeek","getDay","formattedDate","toISOString","split","includes","setDate","getDate"],"sources":["D:/Projects/leave-system/src/leaveMainFunction.js"],"sourcesContent":["export const leaveFunctions = {\r\n  //enable medical report if more than 2 days\r\n  medicalreport() {\r\n    var date = parseInt(document.getElementById(\"leaveCount\").value);\r\n    var report = document.getElementById(\"medicalFile\");\r\n    var leaveType = document.getElementById(\"leaveTypeDD\");\r\n    var type = leaveType.options[leaveType.selectedIndex].text;\r\n\r\n    if (type == \"Medical\" && date > 1) {\r\n      report.disabled = false;\r\n    } else {\r\n      report.disabled = true;\r\n    }\r\n  },\r\n  //lieu leave function\r\n  lieuLeave() {\r\n    var leaveType = document.getElementById(\"leaveTypeDD\");\r\n    var fromdate = document.getElementById(\"fromDate\");\r\n    var lieuPanel = document.getElementById(\"lieuPanel\");\r\n    var todate = document.getElementById(\"toDate\");\r\n    var fromlabel = document.getElementById(\"fromLabel\");\r\n    var tolabel = document.getElementById(\"toLabel\");\r\n    var type = leaveType.options[leaveType.selectedIndex].text;\r\n    if (type == \"Lieu\") {\r\n      fromdate.style.display = \"none\";\r\n      todate.style.display = \"none\";\r\n      fromlabel.style.display = \"none\";\r\n      tolabel.style.display = \"none\";\r\n      lieuPanel.style.display = \"\";\r\n    } else {\r\n      fromdate.style.display = \"\";\r\n      todate.style.display = \"\";\r\n      fromlabel.style.display = \"\";\r\n      tolabel.style.display = \"\";\r\n      lieuPanel.style.display = \"none\";\r\n      this.clearPrior();\r\n      this.clearLeave();\r\n    }\r\n  },\r\n\r\n  // add prior work dates to list\r\n  priorDates() {\r\n    const datePicker = document.getElementById(\"priorDate\");\r\n    const selectedDate = datePicker.value;\r\n\r\n    // Add the selected date to the select option list\r\n    const datesList = document.getElementById(\"priorDateList\");\r\n    const option = document.createElement(\"option\");\r\n    option.text = selectedDate;\r\n    datesList.add(option);\r\n    datesList.style.display = \"\";\r\n  },\r\n  //clear prior list and datepicker\r\n  clearPrior() {\r\n    const datesList = document.getElementById(\"priorDateList\");\r\n    const datePicker = document.getElementById(\"priorDate\");\r\n    while (datesList.firstChild) {\r\n      datesList.removeChild(datesList.firstChild);\r\n    }\r\n    datesList.style.display = \"none\";\r\n    datePicker.value = \"\";\r\n  },\r\n\r\n  // add prior work dates to list\r\n  leaveDates() {\r\n    const datePicker = document.getElementById(\"leaveDate\");\r\n    const selectedDate = datePicker.value;\r\n\r\n    // Add the selected date to the select option list\r\n    const datesList = document.getElementById(\"leaveDateList\");\r\n    const option = document.createElement(\"option\");\r\n    option.text = selectedDate;\r\n    datesList.add(option);\r\n    datesList.style.display = \"\";\r\n  },\r\n\r\n  clearLeave() {\r\n    const datesList = document.getElementById(\"leaveDateList\");\r\n    const datePicker = document.getElementById(\"leaveDate\");\r\n    while (datesList.firstChild) {\r\n      datesList.removeChild(datesList.firstChild);\r\n    }\r\n    datesList.style.display = \"none\";\r\n    datePicker.value = \"\";\r\n  },\r\n\r\n  //calculate days for leave\r\n  calculateBusinessDays() {\r\n    const currentDate = document.getElementById(\"fromDate\");\r\n    const endDate = document.getElementById(\"toDate\");\r\n    const blockedDates = this.blockedDates;\r\n    let businessDays = 0;\r\n\r\n    while (currentDate <= endDate) {\r\n      const dayOfWeek = currentDate.getDay(); // 0 (Sunday) to 6 (Saturday)\r\n      const formattedDate = currentDate.toISOString().split(\"T\")[0];\r\n\r\n      // Exclude weekends (Saturday and Sunday) and blocked dates\r\n      if (\r\n        dayOfWeek !== 0 &&\r\n        dayOfWeek !== 6 &&\r\n        !blockedDates.includes(formattedDate)\r\n      ) {\r\n        businessDays++;\r\n      }\r\n\r\n      currentDate.setDate(currentDate.getDate() + 1); // Move to the next day\r\n    }\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}